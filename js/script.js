/**
 * Subnet Store - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
 */

// ==================== –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ====================
function generateId(prefix = 'ORD') {
  return `${prefix}-${Math.random().toString(36).substr(2, 8).toUpperCase()}`;
}

function getElementValue(selector, parent = document) {
  const el = parent.querySelector(selector);
  return el ? el.textContent || el.value : '';
}

// ==================== –ö–û–†–ó–ò–ù–ê ====================
const cart = {
  items: JSON.parse(localStorage.getItem('cart')) || [],
  total: 0,

  // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  addItem(product) {
    this.items.push(product);
    this.update();
  },

  removeItem(index) {
    this.items.splice(index, 1);
    this.update();
  },

  clear() {
    this.items = [];
    this.update();
  },

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  calculateTotal() {
    this.total = this.items.reduce((sum, item) => sum + item.price, 0);
    return this.total;
  },

  saveToStorage() {
    localStorage.setItem('cart', JSON.stringify(this.items));
    localStorage.setItem('cartTotal', this.total);
  },

  update() {
    this.calculateTotal();
    this.saveToStorage();
    this.updateUI();
  },

  // –ú–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  updateUI() {
    this.updateCounter();
    this.updateDropdown();
    this.updateCartPage();
    this.updateCheckoutPage();
  },

  updateCounter() {
    const counter = document.getElementById('cart-count');
    if (counter) counter.textContent = this.items.length;
  },

  updateDropdown() {
    const itemsEl = document.getElementById('cart-items');
    const totalEl = document.getElementById('cart-total');
    
    if (itemsEl && totalEl) {
      itemsEl.innerHTML = this.items.map((item, i) => this.createCartItemHTML(item, i)).join('');
      totalEl.textContent = `${this.total} —Ä—É–±.`;
    }
  },

  updateCartPage() {
    if (!document.querySelector('.cart-page')) return;
    
    const itemsEl = document.getElementById('cart-items-list');
    if (itemsEl) {
      itemsEl.innerHTML = this.items.length 
        ? this.items.map((item, i) => this.createCartPageItemHTML(item, i)).join('')
        : '<p class="empty-cart">–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>';
    }
    
    ['cart-subtotal', 'cart-total'].forEach(id => {
      const el = document.getElementById(id);
      if (el) el.textContent = `${this.total} —Ä—É–±.`;
    });
  },

  updateCheckoutPage() {
    if (!document.querySelector('.checkout-page')) return;
    
    const itemsEl = document.getElementById('checkout-items');
    if (itemsEl) {
      itemsEl.innerHTML = this.items.map(item => `
        <div class="checkout-item">
          <span>${item.name} ${item.price} —Ä—É–±.</span>
        </div>
      `).join('');
    }
    
    const totalEl = document.getElementById('checkout-total');
    if (totalEl) totalEl.textContent = `${this.total} —Ä—É–±.`;
  },

  // HTML-—à–∞–±–ª–æ–Ω—ã
  createCartItemHTML(item, index) {
    return `
      <div class="cart-item">
        <span>${item.name} ${item.price} —Ä—É–±.</span>
        <button onclick="cart.removeItem(${index})"> ‚úñ </button>
      </div>`;
  },

  createCartPageItemHTML(item, index) {
  const imgSrc = item.image.includes('logo.png') 
    ? 'images/default-product.png' 
    : item.image;
    
  return `
    <div class="cart-item">
      <img src="${imgSrc}" alt="${item.name}">
      <div class="item-info">
        <h4>${item.name}</h4>
        <span class="item-price">${item.price} —Ä—É–±.</span>
      </div>
      <button onclick="cart.removeItem(${index})"> ‚úñ </button>
    </div>`;
}
};

// ==================== TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ====================
async function notifySeller(order) {
  const botToken = '7623663107:AAEnjPxKKLvuM37g8XmsTB9UpdmqtLsduDU';
  const chatId = '5756737130';
  
  try {
    const message = this.createOrderMessage(order);
    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
    
    const response = await fetch(url, {
      method: 'POST',
      headers: {'Content-Type': 'application/json'},
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });

    const result = await response.json();
    if (!result.ok) throw new Error(result.description);
    
    console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', order.id);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
    return false;
  }
}

function createOrderMessage(order) {
  return `
<b>üõçÔ∏è –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –≤ Subnet Store #${order.id}</b>
<i>${new Date().toLocaleString()}</i>

<b>üë§ –ö–ª–∏–µ–Ω—Ç:</b> ${order.customer.name}
<b>‚úâÔ∏è Telegram:</b> ${order.customer.telegram}
<b>üìß Email:</b> ${order.customer.email || '–Ω–µ —É–∫–∞–∑–∞–Ω'}

<b>üõí –¢–æ–≤–∞—Ä—ã:</b>
${order.items.map(i => `- ${i.name}: ${i.price} —Ä—É–±.`).join('\n')}

<b>üí∞ –ò—Ç–æ–≥–æ:</b> ${order.total} —Ä—É–±.
<b>üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b> ${order.notes || '–Ω–µ—Ç'}`;
}

// ==================== –û–ë–†–ê–ë–û–¢–ö–ê –¢–û–í–ê–†–û–í ====================
function setupBuyButtons() {
  document.addEventListener('click', e => {
    if (e.target.classList.contains('buy-btn')) {
      e.preventDefault();
      const productCard = e.target.closest('.product-card, .product-details');
      if (!productCard) return;

      cart.addItem({
        id: productCard.dataset.id || generateId('PROD'),
        name: getElementValue('h2, h3', productCard),
        price: parseInt(getElementValue('.price', productCard).replace(/\D/g, '')) || 0,
        image: getProductImage(productCard)
      });
      
      showFeedback(e.target);
    }
    
    if (e.target.classList.contains('remove-item')) {
      const index = parseInt(e.target.dataset.index);
      if (!isNaN(index)) cart.removeItem(index);
    }
  });
}

function getProductImage(element) {
  // –ò—â–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞ —Å –∫–ª–∞—Å—Å–æ–º product-image
  const img = element.querySelector('.product-image') || 
              element.querySelector('img[alt*="Premium"], img[alt*="Nitro"], img[alt*="Plus"]');
  
  if (!img) return 'images/logo.png';
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
  return new URL(img.src, window.location.href).href;
}

// –û–±–Ω–æ–≤–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é setupBuyButtons –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞:
function setupBuyButtons() {
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('buy-btn')) {
      e.preventDefault();
      
      // –ò—â–µ–º –±–ª–∏–∂–∞–π—à—É—é –∫–∞—Ä—Ç–æ—á–∫—É —Ç–æ–≤–∞—Ä–∞ —Å –∫–ª–∞—Å—Å–æ–º product-card –∏–ª–∏ product-details
      const productCard = e.target.closest('.product-card, .product-details');
      if (!productCard) return;

      const product = {
        id: productCard.dataset.id || generateId('PROD'),
        name: getElementValue('h2, h3', productCard),
        price: parseInt(getElementValue('.price', productCard).replace(/\D/g, '')) || 0,
        image: getProductImage(productCard.closest('section') || productCard)
      };

      cart.addItem(product);
      showFeedback(e.target);
    }
  });
}

function showFeedback(button) {
  const originalText = button.textContent;
  button.textContent = '‚úì –î–æ–±–∞–≤–ª–µ–Ω–æ';
  button.classList.add('added-to-cart');
  
  setTimeout(() => {
    button.textContent = originalText;
    button.classList.remove('added-to-cart');
  }, 2000);
}

// ==================== –û–§–û–†–ú–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê ====================
function setupOrderForm() {
  const form = document.getElementById('order-form');
  if (!form) return;

  form.addEventListener('submit', async e => {
    e.preventDefault();
    
    if (cart.items.length === 0) {
      alert('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
      return window.location.href = 'cart.html';
    }
    const telegram = document.getElementById('telegram').value.trim();
    const name = document.getElementById('name').value.trim();

    if (!name || !telegram) {
      return alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
    }

    showLoader();

    try {
      const order = {
        id: generateId(),
        customer: { 
          name,
          telegram,
          email: document.getElementById('email').value.trim()
        },
        items: [...cart.items],
        total: cart.total,
        notes: document.getElementById('notes').value.trim(),
        date: new Date().toISOString()
      };

      const response = await mockApiSubmit(order);
      
      if (response.success) {
        order.id = response.orderId;
        await notifySeller(order);
        cart.clear();
        window.location.href = `order-success.html?id=${order.id}`;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      hideLoader();
    }
  });
}

async function mockApiSubmit(data) {
  return new Promise(resolve => {
    setTimeout(() => {
      resolve({
        success: true,
        orderId: data.id
      });
    }, 1500);
  });
}

// ==================== –ò–ù–î–ò–ö–ê–¢–û–† –ó–ê–ì–†–£–ó–ö–ò ====================
function showLoader() {
  const loader = document.createElement('div');
  loader.className = 'loader';
  document.body.appendChild(loader);
}

function hideLoader() {
  document.querySelector('.loader')?.remove();
}

// ==================== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ====================
document.addEventListener('DOMContentLoaded', () => {
  cart.update();
  setupBuyButtons();
  setupOrderForm();
  
  const orderId = new URLSearchParams(window.location.search).get('id');
  if (orderId && document.getElementById('order-id')) {
    document.getElementById('order-id').textContent = orderId;
  }
});